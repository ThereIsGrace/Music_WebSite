#tomcat port
server:
  port: 8094
  ssl:
    enabled: true
    key-store: realkey.p12
    key-store-password: 123456  # KeyStore 파일의 암호
    key-store-type: PKCS12  # KeyStore 파일의 유형 (PKCS12 또는 JKS)
    key-alias: realkey  # KeyStore에 포함된 키의 별칭

kakao:
  pay:
    cid: "TC0ONETIME" # 카카오페이에서 발급받은 가맹점 CID
    admin-key: "aff8a80950a445a5d0f32f2c6bd23dbc"

spring:
  devtools:
    livereload:
      enabled: true
  profiles.active: local
  # DB 정보
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://musiccatdb.crx35wrrgnyb.ap-northeast-2.rds.amazonaws.com:3306/musiccatdb
    username: root
    password: 12341234
  # JPA 설정
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:1000}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          client-id: "434286073818-i8nq73hqu3qvpf6hp52btaiqn8gj8908.apps.googleusercontent.com"
          client-secret: "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"
          scope:
            - email
            - profile
        facebook:
          clientId: "844389587101823"
          clientSecret: "074c9d27b7b87c5094208bd7a4bd0359"
          scope:
            - email
            - public_profile
        naver:
          client-id: "ItkYo2xqqB0Gx_n9ab4h"
          client-secret: "qpE0n1RVIP"
          client-authentication-method: post
          authorization-grant-type: authorization_code
          redirect-uri: "https://localhost:8094/login/oauth2/code/{registrationId}"
          scope:
            - name
            - nickname
            - email
            - profile_image
          client-Name: Naver
        kakao:
          client-id: "c5cb083ec59fd7e6a5bd62a911c5b4c9"
          client-secret: "H8gEUsZO42XMhXulm9a7sSCrBvaVodFO"
          client-authentication-method: post
          authorization-grant-type: authorization_code
          redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          scope:
            - profile_nickname
            - profile_image
            - account_email
          client-name: Kakao
      # Provider
      provider:
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
  # REST API
  data:
    rest:
      basePath: /api
      default-page-size: 10

# cors ??


# ?? ?? secret Key ? RedirectUri ??
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - https://localhost:3000/oauth/redirect

jwt:
  header: Authorization
  secret: Y2hvcHBhLWRvbnQtYml0ZS1tZS1zcHJpbmctYm9vdC1qd3QtdGVzdC1zZWNyZXQta2V5LWNob3BwYS1kb250LWJpdGUtbWUtc3ByaW5nLWJvb3Qtand0LXRlc3Qtc2VjcmV0LWtleQo=
  token-validity-in-seconds: 180000
  refresh-token-validity-in-seconds: 600000
